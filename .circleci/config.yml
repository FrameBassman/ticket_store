version: 2.1

jobs:
  build-web:
    working_directory: ~/repo/TicketStore.Web
    docker:
      - image: microsoft/dotnet:2.2-sdk
    steps:
      - checkout:
          path: ~/repo
      - run: curl -sL https://deb.nodesource.com/setup_10.x |  bash - && apt-get install -y nodejs
      - run:
          command: dotnet build
      - run:
          command: npm run build
          working_directory: Client
  build-api:
    working_directory: ~/repo/TicketStore.Api
    docker:
      - image: microsoft/dotnet:2.2-sdk
    steps:
      - checkout:
          path: ~/repo
      - run: dotnet build
  test-api:
    machine:
      docker_layer_caching: true
    steps:
      - checkout
      - run:
          name: update docker-compose
          command: |
            sudo curl -L "https://github.com/docker/compose/releases/download/1.24.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
      - run: make start-test
      - run: sh ./Scripts/wait-until-app-is-deployed.sh
      - run: dotnet test TicketStore.Api.Tests
  turnstile-tests:
    working_directory: ~/repo/TicketStore.MobileApp
    docker:
      - image: circleci/node:10-jessie
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
      - restore_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
      - run:
          command: yarn install
      - save_cache:
          key: yarn-v1-{{ checksum "yarn.lock" }}-{{ arch }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          key: node-v1-{{ checksum "package.json" }}-{{ arch }}
          paths:
            - node_modules
      - run:
          name: jest tests
          command: |
            mkdir -p test-results/jest
            yarn run test
          environment:
            JEST_JUNIT_OUTPUT: test-results/jest/junit.xml
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
  deploy:
    machine:
      docker_layer_caching: true
    steps:
      - checkout
      - run: chmod +x ./Scripts/deploy.sh
      - run: ./Scripts/deploy.sh
    
workflows:
  version: 2
  build-test-deploy:
    jobs:
      # - build-api
      # - build-web
      - test-api
      #     requires:
      #       - build-api
      # - turnstile-tests
      # - deploy:
      #     filters:
      #       branches:
      #         only:
      #           - master
      #     context: docker_hub_creds
      #     requires:
      #       - build-api
      #       - build-web
      #       - test-api
