trigger:
  branches:
    include:
    - '*' 
  paths:
    exclude:
    - README.md

pr:
  branches:
    include:
    - '*' 
  paths:
    exclude:
    - README.md

stages:
- stage: Unit_Tests
  jobs:
  - job: Client
    pool:
      vmImage: 'ubuntu-latest'
    continueOnError: true
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'
    - script: |
        npm install
        npm test
      workingDirectory: $(build.sourcesDirectory)/Services/TicketStore.Web/Client
      displayName: 'npm install and test'
      env:
        CI: true
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit' # Options: JUnit, NUnit, VSTest, xUnit, cTest
        testResultsFiles: 'reports/junit.xml' 
        searchFolder: '$(build.sourcesDirectory)/Services/TicketStore.Web/Client' # Optional
        #mergeTestResults: false # Optional
        #failTaskOnFailedTests: false # Optional
        #testRunTitle: # Optional
        #buildPlatform: # Optional
        #buildConfiguration: # Optional
        #publishRunAttachments: true # Optional

  - job: Api
    pool:
      vmImage: 'ubuntu-latest'
    continueOnError: true
    steps:
    - task: DotNetCoreInstaller@0
      inputs:
        version: '2.2.401'
      displayName: 'Install Dotnet Core'
    - script: |
        dotnet test --logger "trx;LogFileName=report.trx"
        ls -la
      workingDirectory: $(build.sourcesDirectory)/Services/TicketStore.Api.Tests.Unit
      displayName: 'dotnet test'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'xUnit' # Options: JUnit, NUnit, VSTest, xUnit, cTest
        testResultsFiles: 'report.trx' 
        searchFolder: '$(build.sourcesDirectory)/Services/TicketStore.Api.Tests.Unit' # Optional
        #mergeTestResults: false # Optional
        #failTaskOnFailedTests: false # Optional
        #testRunTitle: # Optional
        #buildPlatform: # Optional
        #buildConfiguration: # Optional
        #publishRunAttachments: true # Optional

# pool:
#   vmImage: 'ubuntu-latest'

# steps:
# # 
# - task: NodeTool@0
#   inputs:
#     versionSpec: '10.x'
#   displayName: 'Install Node.js'

# - script: |
#     npm install
#     npm test
#   workingDirectory: $(build.sourcesDirectory)/Services/TicketStore.Web/Client
#   displayName: 'npm install and test'

# - task: PublishTestResults@2
#   inputs:
#     testResultsFormat: 'JUnit' # Options: JUnit, NUnit, VSTest, xUnit, cTest
#     testResultsFiles: 'reports/junit.xml' 
#     searchFolder: '$(build.sourcesDirectory)/Services/TicketStore.Web/Client' # Optional
#     #mergeTestResults: false # Optional
#     #failTaskOnFailedTests: false # Optional
#     #testRunTitle: # Optional
#     #buildPlatform: # Optional
#     #buildConfiguration: # Optional
#     #publishRunAttachments: true # Optional
